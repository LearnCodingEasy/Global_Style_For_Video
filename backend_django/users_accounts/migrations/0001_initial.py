# Generated by Django 5.2.5 on 2025-08-26 15:43

import django.db.models.deletion
import django.utils.timezone
import users_accounts.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('friends_count', models.IntegerField(default=0)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('surname', models.CharField(blank=True, default='', max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('date_of_birth', models.DateField(default=django.utils.timezone.now)),
                ('gender', models.CharField(blank=True, max_length=15, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='covers')),
                ('skills', models.JSONField(blank=True, default=list, null=True)),
                ('task_count', models.IntegerField(default=0)),
                ('is_online', models.BooleanField(default=False)),
                ('friends', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('people_you_may_know', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', users_accounts.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FriendshipRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('notsend', 'NotSent'), ('send', 'Send'), ('waiting', 'Waiting'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('cancel', 'Cancel'), ('unfriend', 'Unfriend'), ('blocked', 'Blocked'), ('muted', 'Muted'), ('frozen', 'Frozen'), ('archived', 'Archived'), ('following', 'Following'), ('unfollowed', 'Unfollowed'), ('reported', 'Reported'), ('spam', 'Spam'), ('deleted', 'Deleted'), ('favorite', 'Favorite'), ('temporarily_blocked', 'TemporarilyBlocked'), ('verified', 'Verified'), ('request_resent', 'RequestResent'), ('suggested', 'Suggested'), ('ignored', 'Ignored'), ('inactive', 'Inactive'), ('limited', 'Limited')], default='notsend', max_length=20)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_friendshiprequests', to=settings.AUTH_USER_MODEL)),
                ('created_for', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_friendshiprequests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
    ]
