# ๐ [ notification/models.py ] ููู

import uuid

from django.db import models

from users_accounts.models import User


from django.utils.timesince import timesince


class Notification(models.Model):
    # ุฃููุงุน ุงูุฅุดุนุงุฑุงุช
    # ๐๐ซ ุทูุจ ุตุฏุงูุฉ ุฌุฏูุฏ
    NEWFRIENDREQUEST = "new_friendrequest"
    # โ๐ซ ุชู ูุจูู ุทูุจ ุงูุตุฏุงูุฉ
    ACCEPTEDFRIENDREQUEST = "accepted_friendrequest"
    # โ๐ซ ุชู ุฑูุถ ุทูุจ ุงูุตุฏุงูุฉ
    REJECTEDFRIENDREQUEST = "rejected_friendrequest"
    # ๐๐ฅ ูุชุงุจุน ุฌุฏูุฏ
    NEWFOLLOW = "new_follow"
    # โ๐ฅ ุฅูุบุงุก ุงููุชุงุจุนุฉ
    CANCELFOLLOW = "cancel_follow"
    # ๐ฌ๐ ุชุนููู ุนูู ุงูููุดูุฑ
    POSTCOMMENT = "post_comment"
    # ๐๐ท ุฅุนุฌุงุจ ุจุงูููุดูุฑ
    POSTLIKE = "post_like"
    # ๐โ๏ธ ุฑุณุงูุฉ ุฌุฏูุฏุฉ
    MESSAGE = "message"

    # ูุงุฆูุฉ ุฃููุงุน ุงูุฅุดุนุงุฑุงุช ุงูููุนุฑูุฉ (ุงุฎุชูุงุฑุงุช ูู ูุงุฆูุฉ ุงูุฅุดุนุงุฑุงุช)
    CHOICES_TYPE_OF_NOTIFICATION = (
        (NEWFRIENDREQUEST, "New friendrequest"),
        (ACCEPTEDFRIENDREQUEST, "Accepted friendrequest"),
        (REJECTEDFRIENDREQUEST, "Rejected friendrequest"),
        (NEWFOLLOW, "New follow"),
        (CANCELFOLLOW, "Cancel follow"),
        (POSTCOMMENT, "Post comment"),
        (POSTLIKE, "Post like"),
        (MESSAGE, "Message"),
    )

    # id: ูููุชุงุญ ุฃุณุงุณู ููุณุชุฎุฏู ูููุนุฑูู ูุฑูุฏ ููุฅุดุนุงุฑ ุจุงุณุชุฎุฏุงู uuid
    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
    # body: ุญูู ูุตู ูุญุชูู ุนูู ูุญุชูู ุงูุฅุดุนุงุฑ
    body = models.TextField()
    # is_read: ุญูู ุจูุงูู ูุดูุฑ ุฅุฐุง ูุงู ุงูุฅุดุนุงุฑ ูุฏ ุชู ูุฑุงุกุชู ุฃู ูุง
    is_read = models.BooleanField(default=False)
    # type_of_notification: ุญูู ูุตู ูุตูุฑ ููุญุฏุฏ ููุน ุงูุฅุดุนุงุฑ ุจุงุณุชุฎุฏุงู ุงูููู ุงููุนุฑูุฉ ุณุงุจููุง
    type_of_notification = models.CharField(
        max_length=50, choices=CHOICES_TYPE_OF_NOTIFICATION
    )
    # created_by: ููุชุงุญ ุฎุงุฑุฌู ูุฑุจุท ุงูุฅุดุนุงุฑ ุจุงููุณุชุฎุฏู ุงูุฐู ุฃูุดุฃู
    created_by = models.ForeignKey(
        User, related_name="created_notifications", on_delete=models.CASCADE
    )
    # created_for: ููุชุงุญ ุฎุงุฑุฌู ูุฑุจุท ุงูุฅุดุนุงุฑ ุจุงููุณุชุฎุฏู ุงูุฐู ุชู ุฅุฑุณุงู ุงูุฅุดุนุงุฑ ุฅููู
    created_for = models.ForeignKey(
        User, related_name="received_notifications", on_delete=models.CASCADE
    )
    # created_at: ุญูู ูุญูุธ ุชุงุฑูุฎ ูููุช ุฅูุดุงุก ุงูุฅุดุนุงุฑ
    created_at = models.DateTimeField(auto_now_add=True)

    class Meta:
        # ุชุฑุชูุจ ุงูุฅุดุนุงุฑุงุช ุญุณุจ ุชุงุฑูุฎ ุงูุฅูุดุงุก ูู ุงูุฃุญุฏุซ ุฅูู ุงูุฃูุฏู
        ordering = ("-created_at",)

    def created_at_formatted(self):
        # ุฅุฑุฌุงุน ุงูููุช ุงููููุถู ููุฐ ุฅูุดุงุก ุงูุฅุดุนุงุฑ
        return timesince(self.created_at)
